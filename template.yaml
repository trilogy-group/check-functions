AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  checks

  Powertools example


Parameters:
  SecretsName:
    Type: String
    Description: Name of the secrets manager secret to be used by the lambda functions

Globals: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
  Function:
    Timeout: 600
    MemorySize: 256
    Runtime: python3.11

Resources:
  SecretReaderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Sid: ""
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource:
                  - "*"
            Version: "2012-10-17"
          PolicyName: SecretReaderRolePolicy

  ConcisenessCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: conciseness.lambda_handler
      CodeUri: checks
      Description: Conciseness Checker
      Architectures:
        - x86_64
      Tracing: Active
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: PowertoolsHelloWorld
          POWERTOOLS_METRICS_NAMESPACE: Powertools
          LOG_LEVEL: INFO
          SECRET_NAME: !Ref SecretsName
      Tags:
        LambdaPowertools: python
      Role:
        Fn::GetAtt:
        - SecretReaderRole
        - Arn
  
  OldAnswerNonCommittalCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: old_answer_non_committal.lambda_handler
      CodeUri: checks
      Description: Old Answer Non Committal Checker
      Architectures:
        - x86_64
      Tracing: Active
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: PowertoolsHelloWorld
          POWERTOOLS_METRICS_NAMESPACE: Powertools
          LOG_LEVEL: INFO
          SECRET_NAME: !Ref SecretsName
      Tags:
        LambdaPowertools: python
      Role:
        Fn::GetAtt:
        - SecretReaderRole
        - Arn
  
  NewAnswerNonCommittalCheckFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      Handler: new_answer_non_committal.lambda_handler
      CodeUri: checks
      Description: New Answer Non Committal Checker
      Architectures:
        - x86_64
      Tracing: Active
       # Powertools env vars: https://awslabs.github.io/aws-lambda-powertools-python/#environment-variables
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: PowertoolsHelloWorld
          POWERTOOLS_METRICS_NAMESPACE: Powertools
          LOG_LEVEL: INFO
          SECRET_NAME: !Ref SecretsName
      Tags:
        LambdaPowertools: python
      Role:
        Fn::GetAtt:
        - SecretReaderRole
        - Arn

Outputs:
  ConcisenessCheckFunction:
    Description: "Conciseness Check Function ARN"
    Value: !GetAtt ConcisenessCheckFunction.Arn
  OldAnswerNonCommittalCheckFunction:
    Description: "Old Answer Non Committal Check Function ARN"
    Value: !GetAtt OldAnswerNonCommittalCheckFunction.Arn
  NewAnswerNonCommittalCheckFunction:
    Description: "New Answer Non Committal Check Function ARN"
    Value: !GetAtt NewAnswerNonCommittalCheckFunction.Arn

